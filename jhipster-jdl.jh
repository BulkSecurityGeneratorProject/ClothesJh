

/**
 * Class Cliente.
 * @author anelsoftware
 */
entity Cliente{
    nombre String required,
    apellido String required,
    celular String,
    telefono String required,
    email String required,
    domicilio String required,
    colegio String required
}


/**
 * Class Modelo.
 * @author anelsoftware
 */
entity Modelo{
    imagen ImageBlob required,
    nombreModelo String required,
    colorVestido String required,
    bordado Boolean,
    descripcion String,
    observacion String
}
/**
 * Class Medida.
 * @author anelsoftware
 */
entity Medida{
    contornoBusto Double,
    anchoPecho Double,
    altoBusto Double,
    bajoBusto Double,
    alturaPinza Double,
    separacionBusto Double,
    talleDeltantero Double,
    talleEspalda Double,
    largoCorset Double,
    costado Double,
    hombro Double,
    anchoHombro Double,
    largoManga Double,
    sisaDelantero Double,
    sisaEspalda Double,
    contornoCintura Double,
    anteCadera Double,
    contornoCadera Double,
    posicionCadera Double,
    largoFalda Double,
    tipoFalda TipoFalda,
    tipoMedida TipoMedida required,
    fechaMedida LocalDate required,
    anchoHombro Double,
    anchoEspalda Double,
    largoManga Double,
    anchoManga Double,
    tiroPantalon Double,
    anchoPinzaPantalon Double,
    anchoRodillaPantalon Double,
    botaPantalon Double,
    largoPantalon Double
}
/**
 * Class Encargo.
 * @author anelsoftware
 */
entity Encargo{
    importeTotal Double required,
    fechaEncargo LocalDate required,
    fechaEntrega LocalDate,
    detalleVestido String required,
    estado Estado,
    tipoEncargo TipoEncargo,
    tipoVestido TipoVestido
}
/**
 * Class Pago.
 * @author anelsoftware
 */
entity Pago{
    fechaPago LocalDate,
    importe Double required,
    detalle String required,
    numeroRecibo Integer required
}
/**
 * Class Factura Presupuesto.
 * @author anelsoftware
 */
entity FacturaPresupuesto {
    fecha LocalDate required,
    formaPago FormaPago required,
    importeTotal BigDecimal
}

entity DetalleFactPres{
    cantidad Integer,
    predio BigDecimal
}

entity Producto{
    nombre String required,
    descripcion String,
    cantidad Integer required,
    codigoOrigen String,
    precioCompra BigDecimal required,
    precioVenta BigDecimal required,
    margenGanancia BigDecimal,
    talle Talla,
    categoria TipoProducto required,
    ubicacion Ubicacion,
    imagen ImageBlob
}

entity Proveedor{
    nombre String required,
    domicilio String required,
    telefono String required,
    cuilCuit String required,
    email String required,
    telefono String required,
    celular String required
}

entity Rubro{
    nombre String,
    descripcion String
}

enum FormaPago{
    CONTADO, TARJETA
}

enum TipoProducto {
    CAMISA, AMBO_LISO, AMBO_RAYADO,
    PANTALON, SACO_SPORT, CORBATA, ACCESORIOS,
    BLUSA, MONO, CORSET, VESTIDO, RAMO, TOCADO, GEMELOS,
    ZAPATO, LIGAS
}

enum Ubicacion{
    VIDRIERA, PERCHERO, MUEBLE, REPISA, DEPOSITO, MOSTRADOR, ESTANTE
}

enum Talla{
    XS, S, M, L, XL, XXL
}

enum Estado {
    ENCARGADO, CORTADO, PROBADO, ENTREGADO, CANCELADO
}

enum TipoEncargo{
    QUINCE, NOVIA, MADRINA, FIESTA, POLICIA, COMUNION, CONFIRMACION,
    PAISANA, CENA_BLANCA, COCKTAIL
}

enum TipoVestido{
    DOS_PIEZAS, UNA_PIEZA, SIRENA, CORTE_A
}

enum TipoFalda{
    TUBO, RECTA, TAJO, EVASE, CORTEA, CAMPANA, PLATO, GAJOS
}

enum TipoMedida{
    AMBO_HOMBRE, AMBO_MUJER, CHALECO,
    PANTALON_HOMBRE, PANTALON_MUJER,
    POLLERA, VESTIDO, CORSET
}

/**
  * Relacion Una empresa tiene uno o muchos usuarios
  */
relationship OneToMany {
    Encargo{medida(nombre)} to Medida{encargo required},
    Cliente{encargo(nombre)} to Encargo{cliente(nombre) required},
    Encargo{pago(fechaPago)} to Pago{encargo required},
    Proveedor{producto(nombre)} to Producto{proveedor(nombre)},
    Encargo{modelo(nombreModelo)} to Modelo{encargo required},
    Cliente{facturaPresupuesto} to FacturaPresupuesto{cliente(nombre)},
    FacturaPresupuesto{detalleFactPres} to DetalleFactPres{facturaPresupuesto},
    Producto{detalleFactPres} to DetalleFactPres{producto(nombre)},
    Rubro{proveedor(nombre)} to Proveedor{rubro(nombre)}
}


paginate all with pager

dto all with mapstruct

service all with serviceImpl
